(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{189:function(e,t,n){"use strict";n.r(t);var o=n(877),r=n(382);for(var i in r)"default"!==i&&function(e){n.d(t,e,function(){return r[e]})}(i);n(843);var s=n(4),a=Object(s.a)(r.default,o.a,o.b,!1,null,"3d238f28",null);t.default=a.exports},382:function(e,t,n){"use strict";n.r(t);var o=n(383),r=n.n(o);for(var i in o)"default"!==i&&function(e){n.d(t,e,function(){return o[e]})}(i);t.default=r.a},383:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){return e&&e.__esModule?e:{default:e}}(n(87));t.default={components:{docs:o.default}}},384:function(e,t,n){},843:function(e,t,n){"use strict";var o=n(384);n.n(o).a},877:function(e,t,n){"use strict";var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("docs",[n("h1",[e._v("Socket.io")]),e._v(" "),n("p",[e._v("\n      If you want to use real-time features, Socket.io is the way to go. We\n      generally recommend using this instead of HTTP connections if you plan to\n      make frequent requests or want to use our pub/sub endpoints.\n    ")]),e._v(" "),n("br"),e._v(" "),n("h4",[e._v("Authenticated connection (Node.js)")]),e._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("      "),n("code",{staticClass:"javascript"},[e._v("const io = require('socket.io-client')\nconst client = io.connect('https://api.nexushub.co/', {\n  query: 'bearer=<access_token>'\n})\n")]),e._v("\n    ")]),e._v(" "),n("p",[e._v("\n      For more information on how to get an access token, check out the\n      "),n("router-link",{attrs:{to:"/developers/api/authentication"}},[e._v("authentication guide")]),e._v(".\n    ")],1),e._v(" "),n("h2",[e._v("RESTful requests")]),e._v(" "),n("h4",[e._v("GET")]),e._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("      "),n("code",{staticClass:"javascript"},[e._v("client.emit('GET', '/foo', res => {\n  console.log(res) // bar\n})\n")]),e._v("\n    ")]),e._v(" "),n("h4",[e._v("POST")]),e._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("      "),n("code",{staticClass:"javascript"},[e._v("client.emit('POST', { url: 'post', { foo: 'bar' }}, res => {\n  console.log(res) // { foo: 'bar' }\n})\n")]),e._v("\n    ")]),e._v(" "),n("h2",[e._v("Pub/Sub")]),e._v(" "),n("p",[e._v("\n      For real-time data, you'll want to subscribe to Pub/Sub endpoints. Their\n      response format is usually the same as on a normal GET request.\n    ")]),e._v(" "),n("h4",[e._v("Subscribe")]),e._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("      "),n("code",{staticClass:"javascript"},[e._v("client.emit('subscribe', '/warframe/v1/orders/opm')\nclient.on('/warframe/v1/orders/opm', opm => {\n  console.log(opm) // Logs orders per minute every time a new order comes in.\n})\n")]),e._v("\n    ")]),e._v(" "),n("h4",[e._v("Unsubscribe")]),e._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("      "),n("code",{staticClass:"javascript"},[e._v("client.emit('unsubscribe', '/warframe/v1/orders/opm')\nclient.off('/warframe/v1/orders/opm')\n  ")]),e._v("\n    ")])])},r=[];n.d(t,"a",function(){return o}),n.d(t,"b",function(){return r})}}]);